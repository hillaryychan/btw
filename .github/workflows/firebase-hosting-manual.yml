name: Manually deploy to Firebase Hosting
on: workflow_dispatch
jobs:
  setup:
    name: Install and cache dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  lint:
    name: Run linting
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check dependencies cache
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - run: yarn lint

  unittest:
    name: Run unit tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check dependencies cache
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - run: yarn test

  build_and_deploy:
    name: Build and deploy
    needs: [lint, unittest]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check dependencies cache
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build
        run: yarn build

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_BY_THE_WAY_C3675 }}"
          channelId: live
          projectId: by-the-way-c3675
